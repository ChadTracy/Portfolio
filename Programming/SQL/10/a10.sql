--CHAD TRACY
--CIS 310-01
--ASSIGNMENT 10

--A10
CREATE TRIGGER UPDATE_BALANCE
	ON CUSTOMERB
	AFTER INSERT, DELETE, UPDATE
AS
BEGIN
	DECLARE @NUM_ORDERED DECIMAL (3,0)
	DECLARE @QUOTED_PRICE DECIMAL (6,2)
	DECLARE @BALANCE DECIMAL (8,2)
	
SELECT *
FROM CUSTOMERB FULL OUTER JOIN ORDER_LINEB
ON CUSTOMERB.REP_NUM = ORDER_LINEB.ITEM_NUM

	UPDATE CUSTOMERB
	SET BALANCE = SUM(@NUM_ORDERED) * @QUOTED_PRICE

	
	IF (EXISTS (SELECT * FROM INSERTED))
	BEGIN
	DECLARE INSERTED_CURSOR CURSOR FOR
	SELECT SUM(NUM_ORDERED) * QUOTED_PRICE AS BALANCE
	FROM ORDER_LINEB
	ORDER BY ITEM_NUM

	OPEN INSERTED_CURSOR
	FETCH NEXT FROM INSERTED_CURSOR
			   INTO @NUM_ORDERED, @QUOTED_PRICE, @BALANCE
	WHILE (@@FETCH_STATUS = 0)
	BEGIN 
		UPDATE CUSTOMERB
		SET @BALANCE = SUM(@NUM_ORDERED) * @QUOTED_PRICE
		WHERE @NUM_ORDERED = NUM_ORDERED AND @QUOTED_PRICE = QUOTED_PRICE
		FETCH NEXT FROM INSERTED_CURSOR
				   INTO @BALANCE
		END
		CLOSE INSERTED_CURSOR 
		DEALLOCATE INSERTED_CURSOR
	END

	IF (EXISTS (SELECT * FROM DELETED))
	BEGIN
	DECLARE DELETED_CURSOR CURSOR FOR
	SELECT SUM(NUM_ORDERED) * QUOTED_PRICE AS BALANCE
	FROM ORDER_LINEB
	ORDER BY ITEM_NUM

	OPEN DELETED_CURSOR
	FETCH NEXT FROM DELETED_CURSOR
			   INTO @NUM_ORDERED, @QUOTED_PRICE, @BALANCE
	WHILE (@@FETCH_STATUS = 0)
	BEGIN 
		UPDATE CUSTOMERB
		SET @BALANCE = SUM(@NUM_ORDERED) * @QUOTED_PRICE
		WHERE @NUM_ORDERED = NUM_ORDERED AND @QUOTED_PRICE = QUOTED_PRICE
		FETCH NEXT FROM DELETED_CURSOR
				   INTO @BALANCE
		END
		CLOSE DELETED_CURSOR 
		DEALLOCATE DELETED_CURSOR
	END
END
GO

